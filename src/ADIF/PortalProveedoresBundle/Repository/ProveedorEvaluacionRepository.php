<?php

namespace ADIF\PortalProveedoresBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use ADIF\ComprasBundle\Entity\TipoActividad;

/**
 * ProveedorEvaluacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProveedorEvaluacionRepository extends EntityRepository
{
    /**
     * Buscar actividades en SIGA por codigo o denominacion
     *
     * @param type string
     * @param type string
     * @return type entity
     **/
    public function getTipoActividad($codigo, $denominacion)
    {
        $em  = $this->getEntityManager();
        $rsm = new ResultSetMapping($em);
        $rsm->addScalarResult('id', 'id');
        
        $sql =
            "SELECT id
        	FROM adif_compras.tipo_actividad
        	WHERE denominacion LIKE CONCAT('[[:<:]]', ?, '[[:>:]]')
        		OR ? LIKE CONCAT('%', descripcion, '%')";

        $query = $em->createNativeQuery($sql, $rsm);
        $query->setParameter(1, $codigo);
        $query->setParameter(2, $denominacion);
        return $query->getResult();

    }

    /**
     * Buscar actividades en SIGA por codigo o descripcion
     *
     * @param type string
     * @param type string
     * @return type entity
     **/
    public function getLocalidad($provincia, $localidad)
    {
        $em  = $this->getEntityManager();
        $sql =
            "SELECT l.id
        	FROM adif_rrhh.provincia AS p
        	INNER JOIN adif_rrhh.localidad AS l
        		ON p.id = l.id_provincia
        	WHERE :provincia LIKE CONCAT('%', p.nombre, '%')
        		AND :localidad LIKE CONCAT('%', l.nombre, '%')";

        $stmt = $em->getConnection()->prepare($sql);
        $stmt->bindValue('provincia', $provincia);
        $stmt->bindValue('localidad', $localidad);
        $stmt->execute();
        return $stmt->fetch();
    }

    /**
     * Buscar actividades en SIGA por codigo o descripcion
     *
     * @param type string
     * @return type entity
     **/
    public function getRubro($rubro)
    {
        $em  = $this->getEntityManager();
        $rsm = new ResultSetMapping($em);
        $rsm->addScalarResult('id', 'id');

        $sql =
            "SELECT id
        	FROM adif_compras.rubro
        	WHERE ? LIKE CONCAT('%', denominacion, '%')";

        $query = $em->createNativeQuery($sql, $rsm);
        $query->setParameter(1, $rubro);
        return $query->getResult();
    }
}
