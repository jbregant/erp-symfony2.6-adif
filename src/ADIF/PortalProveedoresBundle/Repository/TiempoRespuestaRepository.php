<?php

namespace ADIF\PortalProveedoresBundle\Repository;

/**
 * TiempoRespuestaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TiempoRespuestaRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * @param datetime $desde
     * @param datetime $hasta
     * @return tiemposrespuesta
     */
    public function getTiempoRespuestaPorFecha($desde = null, $hasta = null, $tAccion = null) {

        $format = "d/m/Y";
        $desde = \DateTime::createFromFormat($format, $desde);
        $hasta = \DateTime::createFromFormat($format, $hasta);

        $sqltAccion = "";

        /*Reflejo 27/09 esto se estaba calculando SIEMPRE mal
        El createFromFormat adjuntaba la fecha elegida, pero con las horas, minutos
        y segundos de HOY y no 00:00:00*/
        $aux = explode(":", (string)date("H:i:s"));
        $desde = $desde->sub(new \DateInterval('PT'.$aux[0]."H".$aux[1]."M".$aux[2]."S"));
        $hasta = $hasta->sub(new \DateInterval('PT'.$aux[0]."H".$aux[1]."M".$aux[2]."S"));
        $hasta->add(new \DateInterval('PT23H59M59S'));
        //Si las fechas son iguales, entonces al hasta le sumo CASI un dia.
        /*if($desde == $hasta)
            $hasta->add(new \DateInterval('PT23H59M59S'));*/

        if($tAccion)
            $sqltAccion = " AND ta.id = $tAccion";

        $sql = "SELECT date(tr.fecha) AS gFecha, avg(tr.tiempo) as tiempo_promedio, max(tr.tiempo) as tiempo_max, min(tr.tiempo) as tiempo_min, ta.denominacion as accion
                    FROM adif_proveedores.tiempo_respuesta tr
                        JOIN adif_proveedores.tipo_accion ta ON ta.id = tr.id_tipo_accion ";
        
        if (!empty($desde) && !empty($hasta)) {
            $desde = $desde->format("Y-m-d H:i:s");
            $hasta = $hasta->format("Y-m-d H:i:s");
            $sql .= " WHERE fecha >= :desde AND fecha <= :hasta" . $sqltAccion;
        } elseif (!empty($desde) && empty($hasta)) {
            $desde = $desde->format("Y-m-d H:i:s");
            $sql = " WHERE fecha >= :desde" . $sqltAccion;
        } elseif (empty($desde) && !empty($hasta)) {
            $hasta = $hasta->format("Y-m-d H:i:s");
            $sql .= " WHERE fecha <= :hasta" . $sqltAccion;
        }
        
        $sql .= " GROUP BY gFecha, accion";

        $em = $this->getEntityManager();

        $stmt = $em->getConnection()->prepare($sql);
        if (!empty($desde)) $stmt->bindValue('desde', $desde);
        if (!empty($hasta)) $stmt->bindValue('hasta', $hasta);
        $stmt->execute();
        return $stmt->fetchAll();
    }
}
