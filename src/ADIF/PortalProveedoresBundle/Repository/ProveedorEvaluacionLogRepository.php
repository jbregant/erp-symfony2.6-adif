<?php

namespace ADIF\PortalProveedoresBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProveedorEvaluacionLogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProveedorEvaluacionLogRepository extends EntityRepository
{
    /**
     *
     * @param datetime $desde
     * @param datetime $hasta
     * @return visitas
     */
    public function getErroresPorFecha($desde = null, $hasta = null) {

        $format = "d/m/Y";
        $desde = \DateTime::createFromFormat($format, $desde);
        $hasta = \DateTime::createFromFormat($format, $hasta);

        $sql = "SELECT pel.id, date(pel.fecha_creacion) AS fecha, u.email as email, IFNULL(dp.cuit,dp.numero_id_tributaria) as cuit_numero, pel.descripcion as error
       FROM adif_proveedores.proveedor_evaluacion_log pel
       JOIN adif_proveedores.proveedor_evaluacion pe ON pel.id_proveedor_evaluacion = pe.id
       JOIN adif_proveedores.usuario u ON pe.id_usuario = u.id
       JOIN adif_proveedores.usuario_dato_personal udp ON udp.usuario_id = u.id
       JOIN adif_proveedores.proveedor_dato_personal dp ON udp.proveedor_dato_personal_id = dp.id";

        if (!empty($desde) && !empty($hasta)) {
            $desde = $desde->format("Y-m-d H:i:s");
            $hasta = $hasta->format("Y-m-d H:i:s");
            $sql .= " WHERE pel.fecha_creacion >= :desde AND pel.fecha_creacion <= :hasta ";

        }elseif (!empty($desde) && empty($hasta)) {
            $desde = $desde->format("Y-m-d H:i:s");
            $sql .= " WHERE pel.fecha_creacion >= :desde ";

        } elseif (empty($desde) && !empty($hasta)) {
            $hasta = $hasta->format("Y-m-d H:i:s");
            $sql .= " WHERE pel.fecha_creacion <= :hasta ";
        }

        $em = $this->getEntityManager();

        $stmt = $em->getConnection()->prepare($sql);
        if (!empty($desde)) $stmt->bindValue('desde', $desde);
        if (!empty($hasta)) $stmt->bindValue('hasta', $hasta);
        $stmt->execute();
        return $stmt->fetchAll();
    }
}
